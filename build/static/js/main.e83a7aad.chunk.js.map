{"version":3,"sources":["components/RegMenu.js","utils/registers.js","hooks/use-interval.js","hooks/use-cpu.js","utils/constants.js","components/Loader.js","components/ModuleHeader.js","components/RegisterPanel.js","components/SimplePieChart.js","utils/style.js","components/InstructionPanel.js","components/MemoryPanel.js","index.js"],"names":["RegMenu","registers","useState","filter","setFilter","filteredRegisters","r","saver","Error","getFilteredRegisters","getClassName","type","undefined","CurrentCategory","className","role","onClick","map","key","abiName","name","value","toString","description","getRegisters","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useCPU","cpu","setCpu","window","myCpu","Loader","ModuleHeader","title","RegisterPanel","allRegisters","registersAppended","reg","i","low_","getPercentageOf","slice","total","data","parseFloat","Slice","pie","arc","d3","innerRadius","outerRadius","Math","floor","index","label","d","x","transform","centroid","dy","toFixed","SimplePiechart","ele","length","height","width","InstructionPanel","SimplePieChart","instruction_amounts","totalInstructions","cssStyles","getComputedStyle","document","body","styles","getPropertyValue","font","fontMono","Chart","defaults","global","defaultFontFamily","defaultFontColor","colorG5","defaultFontSize","parseInt","sz1","MemoryPanel","numArray","setNumArray","lastSeenData","setLastSeenData","chartRef","React","createRef","lineGraph","setLineGraph","graphData","labels","datasets","fill","borderColor","colorP4","pointBackgroundColor","hoverBackgroundColor","colorP3","myChartRef","getContext","options","responsive","aspectRatio","legend","display","scales","xAxes","gridLines","color","colorG8","yAxes","update","nonzeroMemoryTotal","newArr","concat","ref","ReactDOM","render","querySelector"],"mappings":"iOAqEeA,EAlEC,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACLC,mBAAS,OADJ,mBAC1BC,EAD0B,KAClBC,EADkB,KAgB3BC,EAbuB,WAC3B,OAAQF,GACN,IAAK,eACH,OAAOF,EAAUE,QAAO,SAACG,GAAD,MAAmB,WAAZA,EAAEC,SACnC,IAAK,eACH,OAAON,EAAUE,QAAO,SAACG,GAAD,MAAmB,WAAZA,EAAEC,SACnC,IAAK,MACH,OAAON,EACT,QACE,MAAMO,MAAM,mBAIQC,GAEpBC,EAAe,SAACC,GAAD,OAAWA,IAASR,EAAS,kBAAeS,GAE3DC,EAAkB,kBACtB,yBAAKC,UAAU,YAAYC,KAAK,SAC9B,4BACED,UAAWJ,EAAa,gBACxBC,KAAK,SACLK,QAAS,kBAAMZ,EAAU,kBAH3B,gBAOA,4BACEU,UAAWJ,EAAa,gBACxBC,KAAK,SACLK,QAAS,kBAAMZ,EAAU,kBAH3B,gBAOA,4BACEU,UAAWJ,EAAa,OACxBC,KAAK,SACLK,QAAS,kBAAMZ,EAAU,SAH3B,SAUJ,OACE,oCACE,kBAACS,EAAD,MACA,wBAAIC,UAAU,iBACXT,EAAkBY,KAAI,SAACX,GAAD,OACrB,wBAAIQ,UAAU,eAAeI,IAAG,cAASZ,EAAEa,UACzC,0BAAML,UAAU,iBAAiBR,EAAEc,MACnC,0BAAMN,UAAU,gBAAgBR,EAAEa,SAClC,0BAAML,UAAU,kBAAhB,WAAsCR,EAAEe,QAAU,GAAGC,SAAS,aCxDpErB,EAAY,CAChB,CACEmB,KAAM,KACND,QAAS,OACTI,YAAa,iBACbhB,MAAO,MAET,CACEa,KAAM,KACND,QAAS,KACTI,YAAa,iBACbhB,MAAO,UAET,CACEa,KAAM,KACND,QAAS,KACTI,YAAa,gBACbhB,MAAO,UAET,CACEa,KAAM,KACND,QAAS,KACTI,YAAa,iBACbhB,MAAO,MAET,CACEa,KAAM,KACND,QAAS,KACTI,YAAa,iBACbhB,MAAO,MAET,CACEa,KAAM,KACND,QAAS,KACTI,YAAa,qBACbhB,MAAO,UAET,CACEa,KAAM,KACND,QAAS,KACTI,YAAa,qBACbhB,MAAO,UAET,CACEa,KAAM,KACND,QAAS,KACTI,YAAa,qBACbhB,MAAO,UAET,CACEa,KAAM,KACND,QAAS,UACTI,YAAa,iCACbhB,MAAO,UAET,CACEa,KAAM,KACND,QAAS,KACTI,YAAa,iBACbhB,MAAO,UAET,CACEa,KAAM,MACND,QAAS,KACTI,YAAa,mCACbhB,MAAO,UAET,CACEa,KAAM,MACND,QAAS,KACTI,YAAa,mCACbhB,MAAO,UAET,CACEa,KAAM,MACND,QAAS,KACTI,YAAa,oBACbhB,MAAO,UAET,CACEa,KAAM,MACND,QAAS,KACTI,YAAa,oBACbhB,MAAO,UAET,CACEa,KAAM,MACND,QAAS,KACTI,YAAa,oBACbhB,MAAO,UAET,CACEa,KAAM,MACND,QAAS,KACTI,YAAa,oBACbhB,MAAO,UAET,CACEa,KAAM,MACND,QAAS,KACTI,YAAa,oBACbhB,MAAO,UAET,CACEa,KAAM,MACND,QAAS,KACTI,YAAa,oBACbhB,MAAO,UAET,CACEa,KAAM,MACND,QAAS,KACTI,YAAa,iBACbhB,MAAO,UAET,CACEa,KAAM,MACND,QAAS,KACTI,YAAa,iBACbhB,MAAO,UAET,CACEa,KAAM,MACND,QAAS,KACTI,YAAa,iBACbhB,MAAO,UAET,CACEa,KAAM,MACND,QAAS,KACTI,YAAa,iBACbhB,MAAO,UAET,CACEa,KAAM,MACND,QAAS,KACTI,YAAa,iBACbhB,MAAO,UAET,CACEa,KAAM,MACND,QAAS,KACTI,YAAa,iBACbhB,MAAO,UAET,CACEa,KAAM,MACND,QAAS,KACTI,YAAa,iBACbhB,MAAO,UAET,CACEa,KAAM,MACND,QAAS,KACTI,YAAa,iBACbhB,MAAO,UAET,CACEa,KAAM,MACND,QAAS,MACTI,YAAa,iBACbhB,MAAO,UAET,CACEa,KAAM,MACND,QAAS,MACTI,YAAa,iBACbhB,MAAO,UAET,CACEa,KAAM,MACND,QAAS,KACTI,YAAa,qBACbhB,MAAO,UAET,CACEa,KAAM,MACND,QAAS,KACTI,YAAa,qBACbhB,MAAO,UAET,CACEa,KAAM,MACND,QAAS,KACTI,YAAa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","file":"static/js/main.e83a7aad.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst RegMenu = ({ registers }) => {\n  const [filter, setFilter] = useState('all');\n\n  const getFilteredRegisters = () => {\n    switch (filter) {\n      case 'callee-saved':\n        return registers.filter((r) => r.saver === 'Callee');\n      case 'caller-saved':\n        return registers.filter((r) => r.saver === 'Caller');\n      case 'all':\n        return registers;\n      default:\n        throw Error('unknown filter');\n    }\n  };\n\n  const filteredRegisters = getFilteredRegisters();\n\n  const getClassName = (type) => (type === filter ? 'btn-active' : undefined);\n\n  const CurrentCategory = () => (\n    <div className=\"btn-group\" role=\"group\">\n      <button\n        className={getClassName('callee-saved')}\n        type=\"button\"\n        onClick={() => setFilter('callee-saved')}\n      >\n        Callee-saved\n      </button>\n      <button\n        className={getClassName('caller-saved')}\n        type=\"button\"\n        onClick={() => setFilter('caller-saved')}\n      >\n        Caller-saved\n      </button>\n      <button\n        className={getClassName('all')}\n        type=\"button\"\n        onClick={() => setFilter('all')}\n      >\n        All\n      </button>\n    </div>\n  );\n\n  return (\n    <>\n      <CurrentCategory />\n      <ul className=\"register-list\">\n        {filteredRegisters.map((r) => (\n          <li className=\"register-row\" key={`reg-${r.abiName}`}>\n            <span className=\"register-name\">{r.name}</span>\n            <span className=\"register-abi\">{r.abiName}</span>\n            <span className=\"register-value\">{`${(r.value >>> 0).toString(16)}`}</span>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nRegMenu.propTypes = {\n  registers: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default RegMenu;\n","// data scraped from https://en.wikichip.org/wiki/risc-v/registers\nconst registers = [\n  {\n    name: 'x0',\n    abiName: 'zero',\n    description: 'hardwired zero',\n    saver: null,\n  },\n  {\n    name: 'x1',\n    abiName: 'ra',\n    description: 'return address',\n    saver: 'Caller',\n  },\n  {\n    name: 'x2',\n    abiName: 'sp',\n    description: 'stack pointer',\n    saver: 'Callee',\n  },\n  {\n    name: 'x3',\n    abiName: 'gp',\n    description: 'global pointer',\n    saver: null,\n  },\n  {\n    name: 'x4',\n    abiName: 'tp',\n    description: 'thread pointer',\n    saver: null,\n  },\n  {\n    name: 'x5',\n    abiName: 't0',\n    description: 'temporary register',\n    saver: 'Caller',\n  },\n  {\n    name: 'x6',\n    abiName: 't1',\n    description: 'temporary register',\n    saver: 'Caller',\n  },\n  {\n    name: 'x7',\n    abiName: 't2',\n    description: 'temporary register',\n    saver: 'Caller',\n  },\n  {\n    name: 'x8',\n    abiName: 's0 / fp',\n    description: 'saved register / frame pointer',\n    saver: 'Callee',\n  },\n  {\n    name: 'x9',\n    abiName: 's1',\n    description: 'saved register',\n    saver: 'Callee',\n  },\n  {\n    name: 'x10',\n    abiName: 'a0',\n    description: 'function argument / return value',\n    saver: 'Caller',\n  },\n  {\n    name: 'x11',\n    abiName: 'a1',\n    description: 'function argument / return value',\n    saver: 'Caller',\n  },\n  {\n    name: 'x12',\n    abiName: 'a2',\n    description: 'function argument',\n    saver: 'Caller',\n  },\n  {\n    name: 'x13',\n    abiName: 'a3',\n    description: 'function argument',\n    saver: 'Caller',\n  },\n  {\n    name: 'x14',\n    abiName: 'a4',\n    description: 'function argument',\n    saver: 'Caller',\n  },\n  {\n    name: 'x15',\n    abiName: 'a5',\n    description: 'function argument',\n    saver: 'Caller',\n  },\n  {\n    name: 'x16',\n    abiName: 'a6',\n    description: 'function argument',\n    saver: 'Caller',\n  },\n  {\n    name: 'x17',\n    abiName: 'a7',\n    description: 'function argument',\n    saver: 'Caller',\n  },\n  {\n    name: 'x18',\n    abiName: 's2',\n    description: 'saved register',\n    saver: 'Callee',\n  },\n  {\n    name: 'x19',\n    abiName: 's3',\n    description: 'saved register',\n    saver: 'Callee',\n  },\n  {\n    name: 'x20',\n    abiName: 's4',\n    description: 'saved register',\n    saver: 'Callee',\n  },\n  {\n    name: 'x21',\n    abiName: 's5',\n    description: 'saved register',\n    saver: 'Callee',\n  },\n  {\n    name: 'x22',\n    abiName: 's6',\n    description: 'saved register',\n    saver: 'Callee',\n  },\n  {\n    name: 'x23',\n    abiName: 's7',\n    description: 'saved register',\n    saver: 'Callee',\n  },\n  {\n    name: 'x24',\n    abiName: 's8',\n    description: 'saved register',\n    saver: 'Callee',\n  },\n  {\n    name: 'x25',\n    abiName: 's9',\n    description: 'saved register',\n    saver: 'Callee',\n  },\n  {\n    name: 'x26',\n    abiName: 's10',\n    description: 'saved register',\n    saver: 'Callee',\n  },\n  {\n    name: 'x27',\n    abiName: 's11',\n    description: 'saved register',\n    saver: 'Callee',\n  },\n  {\n    name: 'x28',\n    abiName: 't3',\n    description: 'temporary register',\n    saver: 'Caller',\n  },\n  {\n    name: 'x29',\n    abiName: 't4',\n    description: 'temporary register',\n    saver: 'Caller',\n  },\n  {\n    name: 'x30',\n    abiName: 't5',\n    description: 'temporary register',\n    saver: 'Caller',\n  },\n  {\n    name: 'x31',\n    abiName: 't6',\n    description: 'temporary register',\n    saver: 'Caller',\n  },\n];\n\nconst getRegisters = () => registers;\n\nexport default getRegisters;\n","import { useEffect, useRef } from 'react';\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n    return null;\n  }, [delay]);\n}\n\nexport default useInterval;\n","import { useState } from 'react';\nimport useInterval from './use-interval';\nimport { CLOCK_CYCLE } from '../utils/constants';\n\nfunction useCPU() {\n  const [cpu, setCpu] = useState(null);\n\n  useInterval(() => {\n    setCpu(window.myCpu);\n  }, CLOCK_CYCLE);\n\n  if (!cpu) {\n    return null;\n  }\n\n  return cpu;\n}\n\nexport default useCPU;\n","const Pointers = {\n  start: 0,\n  end: 5,\n};\nconst Temporary = [\n  {\n    start: 5,\n    end: 8,\n  },\n  {\n    start: 28,\n    end: 32,\n  },\n];\n\nconst CalleeSaved = [\n  {\n    start: 8,\n    end: 10,\n  },\n  {\n    start: 18,\n    end: 28,\n  },\n];\n\nconst Arguments = {\n  start: 10,\n  end: 18,\n};\n\nconst CLOCK_CYCLE = 1000;\n\nexport {\n  Pointers, Temporary, CalleeSaved, Arguments, CLOCK_CYCLE,\n};\n","import React from 'react';\n\nconst Loader = () => (\n  <div className=\"loader\">Loading...</div>\n);\n\nexport default Loader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ModuleHeader = ({ title }) => <h2 className=\"module-header\">{title}</h2>;\n\nModuleHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default ModuleHeader;\n","import React from 'react';\nimport RegMenu from './RegMenu';\nimport getRegisters from '../utils/registers';\nimport useCPU from '../hooks/use-cpu';\nimport Loader from './Loader';\nimport ModuleHeader from './ModuleHeader';\n\nconst RegisterPanel = () => {\n  const cpu = useCPU();\n\n  if (!cpu) {\n    return <Loader />;\n  }\n\n  const allRegisters = getRegisters();\n\n  const registersAppended = cpu.registers.map((reg, i) => (\n    { ...allRegisters[i], value: reg.low_ }\n  ));\n\n  return (\n    <>\n      <ModuleHeader title=\"Registers\" />\n      <RegMenu registers={registersAppended} />\n    </>\n  );\n};\n\nexport default RegisterPanel;\n","import React from 'react';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport Loader from './Loader';\n\n\nfunction getPercentageOf(slice, total) {\n  return (slice.data.value / parseFloat(total)) * 100;\n}\n\nconst SimplePiechart = ({ data, total }) => {\n  const height = 400;\n  const width = 400;\n\n  // this is so that the browser doesnt show the labels of each slice\n  // in the pie chart when the values of the piechart data array are all 0's\n  if (data.filter((ele) => ele.value === 0).length > 0) {\n    return <Loader />;\n  }\n\n  // defines what to mathematically use to display the data\n  const pie = d3.pie().value((d) => d.value)(data);\n\n  return (\n    <svg className=\"inst-pie\" height={height} width={width}>\n      <g transform={`translate(${width / 2}, ${height / 2})`}>\n        <Slice pie={pie} total={total} />\n      </g>\n    </svg>\n  );\n};\n\nconst Slice = ({ pie, total }) => {\n  // some boilerplate stuff... not too sure how it works\n  const arc = d3.arc().innerRadius(0).outerRadius(200);\n\n  // returns an array of <g> elements where it contains the slices, and labels for each slice.\n  return pie\n    .filter((slice) => Math.floor(getPercentageOf(slice, total)) > 0)\n    .map((slice, index) => (\n      <g className={`inst-pie-slice-${index}`} key={`${index.toString()}`}>\n        <path key={`${slice.data.label}value`} d={arc(slice)} />\n        <text\n          x=\"0\"\n          key={`${slice.data.label}label`}\n          transform={`translate(${arc.centroid(slice)})`}\n        >\n          <tspan className=\"inst-pie-name\">{slice.data.label}</tspan>\n          <tspan\n            x=\"0\"\n            dy=\"1.2em\"\n            className=\"inst-pie-percent\"\n          >\n            {`${getPercentageOf(slice, total).toFixed(2)}%`}\n          </tspan>\n        </text>\n      </g>\n    ));\n};\n\nSimplePiechart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string,\n    value: PropTypes.number,\n  })).isRequired,\n  total: PropTypes.number.isRequired,\n};\n\nSlice.propTypes = {\n  pie: PropTypes.arrayOf(PropTypes.object).isRequired,\n  total: PropTypes.number,\n};\n\nexport default SimplePiechart;\n","// grabs styles from design system declared in CSS\n//\n// if you need a style from the design system,\n// then get the property value and export it\n// using the naming convention described in the\n// comments.\nconst cssStyles = getComputedStyle(document.body);\n\nconst styles = {};\nfor (let i = 1; i <= 9; i += 1) {\n  styles[`colorP${i}`] = cssStyles.getPropertyValue(`--color-p${i}`);\n  styles[`colorG${i}`] = cssStyles.getPropertyValue(`--color-g${i}`);\n  styles[`sz${i}`] = cssStyles.getPropertyValue(`--sz-${i}`);\n  if (i <= 4) {\n    styles[`tiny${i}`] = cssStyles.getPropertyValue(`--tiny-${i}`);\n  }\n}\n\nstyles.font = cssStyles.getPropertyValue('--font');\nstyles.fontMono = cssStyles.getPropertyValue('--font-mono');\n\nexport default styles;\n","import React from 'react';\nimport SimplePieChart from './SimplePieChart';\nimport useCPU from '../hooks/use-cpu';\nimport Loader from './Loader';\nimport ModuleHeader from './ModuleHeader';\n\nconst InstructionPanel = () => {\n  const cpu = useCPU();\n\n  if (!cpu) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      <ModuleHeader title=\"Instruction Ratios\" />\n      <SimplePieChart data={cpu.instruction_amounts} total={cpu.totalInstructions} />\n    </>\n  );\n};\n\nexport default InstructionPanel;\n","import React, { useState, useEffect } from 'react';\nimport Chart from 'chart.js';\nimport useCPU from '../hooks/use-cpu';\nimport Loader from './Loader';\nimport styles from '../utils/style';\nimport ModuleHeader from './ModuleHeader';\n\nChart.defaults.global.defaultFontFamily = styles.font;\nChart.defaults.global.defaultFontColor = styles.colorG5;\nChart.defaults.global.defaultFontSize = parseInt(styles.sz1, 10);\n\n/* this line chart graphs the last 10 data points we've seen,\nand updates the lower and upper bound of the range to be equal\nto the min and max of this dataset, respectively. */\nconst numData = 10;\n\n// seen from a console.log(cpu.totalMemory)\n// const initialMemoryTotal = 2621440;\n\n\nconst MemoryPanel = () => {\n  const [numArray, setNumArray] = useState([]);\n  // const [min, setMin] = useState(0);\n  // const [max, setMax] = useState(initialMemoryTotal);\n  const [lastSeenData, setLastSeenData] = useState([0]);\n  const cpu = useCPU();\n\n  const chartRef = React.createRef();\n  const [lineGraph, setLineGraph] = useState(null);\n\n  const graphData = {\n    labels: ['5', '4', '3', '2', '1'],\n    datasets: [\n      {\n        fill: false, // fill area under line\n        borderColor: styles.colorP4, // line color\n        pointBackgroundColor: styles.colorP4, // point color\n        hoverBackgroundColor: styles.colorP3,\n        data: numArray,\n      },\n    ],\n  };\n\n  useEffect(() => {\n    if (cpu && !lineGraph) {\n      const myChartRef = chartRef.current.getContext('2d');\n\n      setLineGraph(\n        new Chart(myChartRef, {\n          type: 'line',\n          data: graphData,\n          options: {\n            responsive: true,\n            aspectRatio: 3 / 2,\n            legend: {\n              display: false,\n            },\n            scales: {\n              xAxes: [\n                {\n                  gridLines: {\n                    color: styles.colorG8,\n                  },\n                },\n              ],\n              yAxes: [\n                {\n                  gridLines: {\n                    color: styles.colorG8,\n                  },\n                },\n              ],\n            },\n          },\n        })\n      );\n      // setCanvasDrawn(true);\n    } else if (cpu && lineGraph) {\n      lineGraph.data = graphData;\n      // we pass 0 to make it not animate when updating\n      lineGraph.update(0);\n    }\n  }, [cpu, lineGraph, chartRef, graphData]);\n\n  // const setRange = (newArr) => {\n  //   setMin(Math.min(...newArr));\n  //   setMax(Math.max(...newArr));\n  // };\n\n  useEffect(() => {\n    if (cpu && lastSeenData !== cpu.nonzeroMemoryTotal) {\n      if (numArray.length === numData) {\n        const temp = numArray.filter(((ele, i) => i !== 0));\n        const newArr = temp.concat(cpu.nonzeroMemoryTotal);\n        // setRange(newArr);\n        setNumArray(newArr);\n      } else {\n        const newArr = numArray.concat(cpu.nonzeroMemoryTotal);\n        // setRange(newArr);\n        setNumArray(newArr);\n      }\n      setLastSeenData(cpu.nonzeroMemoryTotal);\n    }\n  }, [cpu, numArray, lastSeenData]);\n\n  if (!cpu) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      <ModuleHeader title=\"Number of Non-zero Words\" />\n      <div className=\"mem-graph\">\n        <canvas\n          id=\"myChart\"\n          ref={chartRef}\n        />\n      </div>\n    </>\n  );\n};\n\n\nexport default MemoryPanel;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RegisterPanel from './components/RegisterPanel';\nimport InstructionPanel from './components/InstructionPanel';\nimport MemoryPanel from './components/MemoryPanel';\n\nReactDOM.render(<RegisterPanel />, document.querySelector('#registerPanel'));\nReactDOM.render(<InstructionPanel />, document.querySelector('#instructionPanel'));\nReactDOM.render(<MemoryPanel />, document.querySelector('#memoryPanel'));\n"],"sourceRoot":""}