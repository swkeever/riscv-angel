{"version":3,"sources":["utils/registers.js","hooks/use-interval.js","utils/style.js","hooks/use-cpu.js","utils/constants.js","components/Loader.js","components/ModuleHeader.js","components/RegisterPanel.js","components/InstructionPanel.js","components/MemoryPanel.js","index.js","utils/elementIds.js"],"names":["registers","name","abiName","description","saver","getRegisters","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useCPU","useState","cpu","setCpu","window","myCpu","Loader","className","ModuleHeader","title","Uint64LE","require","RegisterPanel","filter","setFilter","allRegisters","registersAppended","map","val","toString","reg","i","value","filteredRegisters","r","Error","getFilteredRegisters","Button","type","classifier","undefined","onClick","CurrentCategory","role","disabledClass","includes","key","cssStyles","getComputedStyle","document","body","styles","color","size","tiny","getPropertyValue","font","fontMono","InstructionPanel","instAmounts","graphData","chartRef","React","createRef","chart","setChart","data","update","ref","getContext","Chart","options","legend","fontSize","position","labels","padding","parseInt","tooltips","rotation","Math","PI","instruction_amounts","label","values","every","v","fill","length","arcColors","_","idx","datasets","backgroundColor","borderColor","g9","hoverBackgroundColor","MemoryPanel","numArray","setNumArray","lastSeenData","setLastSeenData","lineGraph","setLineGraph","Array","reverse","p4","pointBackgroundColor","p2","myChartRef","display","scales","xAxes","gridLines","g8","yAxes","nonzeroMemoryTotal","newArr","ele","concat","parseFloat","memoryTotal","toFixed","defaults","global","defaultFontFamily","defaultFontColor","g5","defaultFontSize","aspectRatio","responsive","ReactDOM","render","querySelector"],"mappings":"4MACMA,EAAY,CAChB,CACEC,KAAM,KACNC,QAAS,OACTC,YAAa,iBACbC,MAAO,MAET,CACEH,KAAM,KACNC,QAAS,KACTC,YAAa,iBACbC,MAAO,UAET,CACEH,KAAM,KACNC,QAAS,KACTC,YAAa,gBACbC,MAAO,UAET,CACEH,KAAM,KACNC,QAAS,KACTC,YAAa,iBACbC,MAAO,MAET,CACEH,KAAM,KACNC,QAAS,KACTC,YAAa,iBACbC,MAAO,MAET,CACEH,KAAM,KACNC,QAAS,KACTC,YAAa,qBACbC,MAAO,UAET,CACEH,KAAM,KACNC,QAAS,KACTC,YAAa,qBACbC,MAAO,UAET,CACEH,KAAM,KACNC,QAAS,KACTC,YAAa,qBACbC,MAAO,UAET,CACEH,KAAM,KACNC,QAAS,UACTC,YAAa,iCACbC,MAAO,UAET,CACEH,KAAM,KACNC,QAAS,KACTC,YAAa,iBACbC,MAAO,UAET,CACEH,KAAM,MACNC,QAAS,KACTC,YAAa,mCACbC,MAAO,UAET,CACEH,KAAM,MACNC,QAAS,KACTC,YAAa,mCACbC,MAAO,UAET,CACEH,KAAM,MACNC,QAAS,KACTC,YAAa,oBACbC,MAAO,UAET,CACEH,KAAM,MACNC,QAAS,KACTC,YAAa,oBACbC,MAAO,UAET,CACEH,KAAM,MACNC,QAAS,KACTC,YAAa,oBACbC,MAAO,UAET,CACEH,KAAM,MACNC,QAAS,KACTC,YAAa,oBACbC,MAAO,UAET,CACEH,KAAM,MACNC,QAAS,KACTC,YAAa,oBACbC,MAAO,UAET,CACEH,KAAM,MACNC,QAAS,KACTC,YAAa,oBACbC,MAAO,UAET,CACEH,KAAM,MACNC,QAAS,KACTC,YAAa,iBACbC,MAAO,UAET,CACEH,KAAM,MACNC,QAAS,KACTC,YAAa,iBACbC,MAAO,UAET,CACEH,KAAM,MACNC,QAAS,KACTC,YAAa,iBACbC,MAAO,UAET,CACEH,KAAM,MACNC,QAAS,KACTC,YAAa,iBACbC,MAAO,UAET,CACEH,KAAM,MACNC,QAAS,KACTC,YAAa,iBACbC,MAAO,UAET,CACEH,KAAM,MACNC,QAAS,KACTC,YAAa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","file":"static/js/main.0ea575f4.chunk.js","sourcesContent":["// data scraped from https://en.wikichip.org/wiki/risc-v/registers\nconst registers = [\n  {\n    name: 'x0',\n    abiName: 'zero',\n    description: 'hardwired zero',\n    saver: null,\n  },\n  {\n    name: 'x1',\n    abiName: 'ra',\n    description: 'return address',\n    saver: 'Caller',\n  },\n  {\n    name: 'x2',\n    abiName: 'sp',\n    description: 'stack pointer',\n    saver: 'Callee',\n  },\n  {\n    name: 'x3',\n    abiName: 'gp',\n    description: 'global pointer',\n    saver: null,\n  },\n  {\n    name: 'x4',\n    abiName: 'tp',\n    description: 'thread pointer',\n    saver: null,\n  },\n  {\n    name: 'x5',\n    abiName: 't0',\n    description: 'temporary register',\n    saver: 'Caller',\n  },\n  {\n    name: 'x6',\n    abiName: 't1',\n    description: 'temporary register',\n    saver: 'Caller',\n  },\n  {\n    name: 'x7',\n    abiName: 't2',\n    description: 'temporary register',\n    saver: 'Caller',\n  },\n  {\n    name: 'x8',\n    abiName: 's0 / fp',\n    description: 'saved register / frame pointer',\n    saver: 'Callee',\n  },\n  {\n    name: 'x9',\n    abiName: 's1',\n    description: 'saved register',\n    saver: 'Callee',\n  },\n  {\n    name: 'x10',\n    abiName: 'a0',\n    description: 'function argument / return value',\n    saver: 'Caller',\n  },\n  {\n    name: 'x11',\n    abiName: 'a1',\n    description: 'function argument / return value',\n    saver: 'Caller',\n  },\n  {\n    name: 'x12',\n    abiName: 'a2',\n    description: 'function argument',\n    saver: 'Caller',\n  },\n  {\n    name: 'x13',\n    abiName: 'a3',\n    description: 'function argument',\n    saver: 'Caller',\n  },\n  {\n    name: 'x14',\n    abiName: 'a4',\n    description: 'function argument',\n    saver: 'Caller',\n  },\n  {\n    name: 'x15',\n    abiName: 'a5',\n    description: 'function argument',\n    saver: 'Caller',\n  },\n  {\n    name: 'x16',\n    abiName: 'a6',\n    description: 'function argument',\n    saver: 'Caller',\n  },\n  {\n    name: 'x17',\n    abiName: 'a7',\n    description: 'function argument',\n    saver: 'Caller',\n  },\n  {\n    name: 'x18',\n    abiName: 's2',\n    description: 'saved register',\n    saver: 'Callee',\n  },\n  {\n    name: 'x19',\n    abiName: 's3',\n    description: 'saved register',\n    saver: 'Callee',\n  },\n  {\n    name: 'x20',\n    abiName: 's4',\n    description: 'saved register',\n    saver: 'Callee',\n  },\n  {\n    name: 'x21',\n    abiName: 's5',\n    description: 'saved register',\n    saver: 'Callee',\n  },\n  {\n    name: 'x22',\n    abiName: 's6',\n    description: 'saved register',\n    saver: 'Callee',\n  },\n  {\n    name: 'x23',\n    abiName: 's7',\n    description: 'saved register',\n    saver: 'Callee',\n  },\n  {\n    name: 'x24',\n    abiName: 's8',\n    description: 'saved register',\n    saver: 'Callee',\n  },\n  {\n    name: 'x25',\n    abiName: 's9',\n    description: 'saved register',\n    saver: 'Callee',\n  },\n  {\n    name: 'x26',\n    abiName: 's10',\n    description: 'saved register',\n    saver: 'Callee',\n  },\n  {\n    name: 'x27',\n    abiName: 's11',\n    description: 'saved register',\n    saver: 'Callee',\n  },\n  {\n    name: 'x28',\n    abiName: 't3',\n    description: 'temporary register',\n    saver: 'Caller',\n  },\n  {\n    name: 'x29',\n    abiName: 't4',\n    description: 'temporary register',\n    saver: 'Caller',\n  },\n  {\n    name: 'x30',\n    abiName: 't5',\n    description: 'temporary register',\n    saver: 'Caller',\n  },\n  {\n    name: 'x31',\n    abiName: 't6',\n    description: 'temporary register',\n    saver: 'Caller',\n  },\n];\n\nconst getRegisters = () => registers;\n\nexport default getRegisters;\n","import { useEffect, useRef } from 'react';\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n    return null;\n  }, [delay]);\n}\n\nexport default useInterval;\n","// grabs styles from design system declared in CSS\n//\n// if you need a style from the design system,\n// then get the property value and export it\n// using the naming convention described in the\n// comments.\nconst cssStyles = getComputedStyle(document.body);\n\nconst styles = {\n  color: {},\n  size: {},\n  tiny: {},\n};\nfor (let i = 1; i <= 9; i += 1) {\n  styles.color[`p${i}`] = cssStyles.getPropertyValue(`--color-p${i}`);\n  styles.color[`g${i}`] = cssStyles.getPropertyValue(`--color-g${i}`);\n  styles.size[`${i}`] = cssStyles.getPropertyValue(`--sz-${i}`);\n  if (i <= 4) {\n    styles.tiny[`${i}`] = cssStyles.getPropertyValue(`--tiny-${i}`);\n  }\n}\n\nstyles.font = cssStyles.getPropertyValue('--font');\nstyles.fontMono = cssStyles.getPropertyValue('--font-mono');\n\nexport default styles;\n","import { useState } from 'react';\nimport useInterval from './use-interval';\nimport { CLOCK_CYCLE } from '../utils/constants';\n\nfunction useCPU() {\n  const [cpu, setCpu] = useState(null);\n\n  useInterval(() => {\n    setCpu(window.myCpu);\n  }, CLOCK_CYCLE);\n\n  if (!cpu) {\n    return null;\n  }\n\n  return cpu;\n}\n\nexport default useCPU;\n","const Pointers = {\n  start: 0,\n  end: 5,\n};\nconst Temporary = [\n  {\n    start: 5,\n    end: 8,\n  },\n  {\n    start: 28,\n    end: 32,\n  },\n];\n\nconst CalleeSaved = [\n  {\n    start: 8,\n    end: 10,\n  },\n  {\n    start: 18,\n    end: 28,\n  },\n];\n\nconst Arguments = {\n  start: 10,\n  end: 18,\n};\n\nconst CLOCK_CYCLE = 125;\n\nexport {\n  Pointers, Temporary, CalleeSaved, Arguments, CLOCK_CYCLE,\n};\n","import React from 'react';\n\nconst Loader = () => (\n  <div className=\"loader\">Loading...</div>\n);\n\nexport default Loader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ModuleHeader = ({ title }) => <h2 className=\"module-header\">{title}</h2>;\n\nModuleHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default ModuleHeader;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport getRegisters from '../utils/registers';\nimport useCPU from '../hooks/use-cpu';\nimport Loader from './Loader';\nimport ModuleHeader from './ModuleHeader';\n\nconst { Uint64LE } = require('int64-buffer');\n\nconst RegisterPanel = () => {\n  const [filter, setFilter] = useState('all');\n\n  const cpu = useCPU();\n\n  if (!cpu) {\n    return <Loader />;\n  }\n\n  const allRegisters = getRegisters();\n\n  const toBigInt = cpu.registers.map((val) => new Uint64LE(val).toString(16));\n\n  const registersAppended = toBigInt.map((reg, i) => (\n    { ...allRegisters[i], value: reg }\n  ));\n\n  const getFilteredRegisters = () => {\n    switch (filter) {\n      case 'callee-saved':\n        return registersAppended.filter((r) => r.saver === 'Callee');\n      case 'caller-saved':\n        return registersAppended.filter((r) => r.saver === 'Caller');\n      case 'all':\n        return registersAppended;\n      default:\n        throw Error('unknown filter');\n    }\n  };\n\n  const filteredRegisters = getFilteredRegisters();\n  const getButtonClass = (type) => (type === filter ? 'btn-active' : undefined);\n\n  const Button = ({ classifier }) => (\n    <button\n      className={getButtonClass(classifier)}\n      type=\"button\"\n      onClick={() => setFilter(classifier)}\n    >\n      {classifier}\n    </button>\n  );\n\n  Button.propTypes = {\n    classifier: PropTypes.string.isRequired,\n  };\n\n  const CurrentCategory = () => (\n    <div className=\"btn-group\" role=\"group\">\n      <Button classifier=\"all\" />\n      <Button classifier=\"caller-saved\" />\n      <Button classifier=\"callee-saved\" />\n    </div>\n  );\n\n  return (\n    <>\n      <ModuleHeader title=\"Registers\" />\n      <CurrentCategory />\n      <ul className=\"register-list\">\n        {registersAppended.map((r) => {\n          const disabledClass = !filteredRegisters.includes(r) && 'register-disabled';\n\n          return (\n            <li className={`register-row ${disabledClass}`} key={`reg-${r.abiName}`}>\n              <span className={`register-name ${disabledClass}`}>{r.name}</span>\n              <span className={`register-abi ${disabledClass}`}>{r.abiName}</span>\n              <span className={`register-value ${disabledClass}`}>{r.value}</span>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default RegisterPanel;\n","import React, { useState, useEffect } from 'react';\nimport Chart from 'chart.js';\nimport useCPU from '../hooks/use-cpu';\nimport Loader from './Loader';\nimport ModuleHeader from './ModuleHeader';\nimport styles from '../utils/style';\n\nexport default function InstructionPanel() {\n  const cpu = useCPU();\n  const chartRef = React.createRef();\n  const [chart, setChart] = useState(null);\n\n  let instAmounts;\n  let graphData;\n\n  useEffect(() => {\n    if (!cpu) {\n      return;\n    }\n\n    if (!chart) {\n      const ref = chartRef.current.getContext('2d');\n\n      setChart(\n        new Chart(ref, {\n          type: 'pie',\n          data: graphData,\n          options: {\n            legend: {\n              fontSize: styles.size[5],\n              position: 'left',\n              labels: {\n                padding: parseInt(styles.size[5], 10),\n              },\n            },\n            tooltips: true,\n            rotation: Math.PI / 4,\n          },\n        }),\n      );\n    } else {\n      chart.data = graphData;\n      chart.update(0);\n    }\n  }, [cpu, chart, chartRef, graphData]);\n\n  if (!cpu) {\n    return <Loader />;\n  }\n\n  // instAmounts = [{label: string, value: number}]\n  instAmounts = cpu.instruction_amounts;\n\n  // TODO: memoryOrder is always 0 so i'm deleting it for now\n  instAmounts = instAmounts.filter((i) => i.label !== 'memoryOrder');\n\n  const labels = instAmounts.map((i) => i.label);\n  let values = instAmounts.map((i) => i.value);\n\n  if (values.every((v) => v === 0)) {\n    values = values.fill(1 / values.length);\n  }\n\n  const arcColors = instAmounts.map((_, idx) => styles.color[`p${idx + 3}`]);\n\n  graphData = {\n    datasets: [\n      {\n        data: values,\n        backgroundColor: arcColors,\n        borderColor: styles.color.g9,\n        hoverBackgroundColor: arcColors,\n      },\n    ],\n\n    labels,\n  };\n\n  return (\n    <>\n      <ModuleHeader title=\"Instructions\" />\n      <div className=\"canvas-container\">\n        <canvas className=\"inst-pie\" ref={chartRef} />\n      </div>\n    </>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport Chart from 'chart.js';\nimport useCPU from '../hooks/use-cpu';\nimport Loader from './Loader';\nimport styles from '../utils/style';\nimport ModuleHeader from './ModuleHeader';\n\nconst MemoryPanel = () => {\n  const [numArray, setNumArray] = useState([]);\n  const [lastSeenData, setLastSeenData] = useState([0]);\n  const cpu = useCPU();\n\n  const chartRef = React.createRef();\n  const [lineGraph, setLineGraph] = useState(null);\n\n  /* this line chart graphs the last 10 data points we've seen,\n     and updates the lower and upper bound of the range to be equal\n     to the min and max of this dataset, respectively. */\n  const numData = 10;\n\n  const graphData = {\n    labels: Array(numData)\n      .fill()\n      .map((_, idx) => (idx + 1).toString())\n      .reverse(),\n    datasets: [\n      {\n        fill: false, // fill area under line\n        borderColor: styles.color.p4, // line color\n        pointBackgroundColor: styles.color.p4, // point color\n        hoverBackgroundColor: styles.color.p2,\n        data: numArray,\n      },\n    ],\n  };\n\n  useEffect(() => {\n    if (cpu && !lineGraph) {\n      const myChartRef = chartRef.current.getContext('2d');\n\n      setLineGraph(\n        new Chart(myChartRef, {\n          type: 'line',\n          data: graphData,\n          options: {\n            legend: {\n              display: false,\n            },\n            scales: {\n              xAxes: [\n                {\n                  gridLines: {\n                    color: styles.color.g8,\n                  },\n                },\n              ],\n              yAxes: [\n                {\n                  gridLines: {\n                    color: styles.color.g8,\n                  },\n                },\n              ],\n            },\n          },\n        }),\n      );\n      // setCanvasDrawn(true);\n    } else if (cpu && lineGraph) {\n      lineGraph.data = graphData;\n      // we pass 0 to make it not animate when updating\n      lineGraph.update(0);\n    }\n  }, [cpu, lineGraph, chartRef, graphData]);\n\n  useEffect(() => {\n    if (cpu && lastSeenData !== cpu.nonzeroMemoryTotal) {\n      if (numArray.length === numData) {\n        const temp = numArray.filter((ele, i) => i !== 0);\n        const newArr = temp.concat(cpu.nonzeroMemoryTotal);\n        // setRange(newArr);\n        setNumArray(newArr);\n      } else {\n        const newArr = numArray.concat(cpu.nonzeroMemoryTotal);\n        // setRange(newArr);\n        setNumArray(newArr);\n      }\n      setLastSeenData(cpu.nonzeroMemoryTotal);\n    }\n  }, [cpu, numArray, lastSeenData]);\n\n  if (!cpu) {\n    return <Loader />;\n  }\n\n  return (\n    <div className=\"memory-block\">\n      <ModuleHeader title=\"Number of Non-zero Words\" />\n      <div className=\"memory-pct\">\n        {`${(\n          parseFloat(cpu.nonzeroMemoryTotal / cpu.memoryTotal) * 100\n        ).toFixed(2)} % `}\n      </div>\n      <div className=\"canvas-container\">\n        <canvas id=\"myChart\" ref={chartRef} />\n      </div>\n    </div>\n  );\n};\n\nexport default MemoryPanel;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Chart from 'chart.js';\nimport RegisterPanel from './components/RegisterPanel';\nimport InstructionPanel from './components/InstructionPanel';\nimport MemoryPanel from './components/MemoryPanel';\nimport { REG_PANEL, INST_PANEL, MEM_PANEL } from './utils/elementIds';\nimport styles from './utils/style';\n\n// Chart.js configs\nChart.defaults.global.defaultFontFamily = styles.font;\nChart.defaults.global.defaultFontColor = styles.color.g5;\n// console.log('size', parseInt(styles.sz1, 10));\nChart.defaults.global.defaultFontSize = parseInt(styles.size[1], 10);\nChart.defaults.global.aspectRatio = 3 / 2;\nChart.defaults.global.responsive = true;\n\nReactDOM.render(<RegisterPanel />, document.querySelector(REG_PANEL));\nReactDOM.render(<InstructionPanel />, document.querySelector(INST_PANEL));\nReactDOM.render(<MemoryPanel />, document.querySelector(MEM_PANEL));\n","const INST_PANEL = '#instructionPanel';\n\nconst REG_PANEL = '#registerPanel';\n\nconst MEM_PANEL = '#memoryPanel';\n\nexport { INST_PANEL, REG_PANEL, MEM_PANEL };\n"],"sourceRoot":""}